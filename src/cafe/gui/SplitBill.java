/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cafe.gui;

import cafe.tool.Combo;
import cafe.tool.MyDb;
import cafe.tool.MsgBox;

/**
 *
 * @author Rudy
 */
public class SplitBill extends javax.swing.JFrame {

    /**
     * Creates new form SplitBill
     */
    public SplitBill(String tabNo, Cashier cashLink) {
        initComponents();
        this.tabNo = tabNo;
        this.cashLink = cashLink;
        tabSplit.removeColumn(tabSplit.getColumnModel().getColumn(0));
        
        refreshList();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbOrderList = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        labOrderList = new javax.swing.JLabel();
        labQty = new javax.swing.JLabel();
        spSplit = new javax.swing.JScrollPane();
        tabSplit = new javax.swing.JTable();
        spQty = new javax.swing.JSpinner(new javax.swing.SpinnerNumberModel(0, 0, 99, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Split Bills");

        cbOrderList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOrderListItemStateChanged(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 204, 204));
        btnAdd.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(0, 204, 51));
        btnDone.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        labOrderList.setText("Menu");

        labQty.setText("Qty");

        tabSplit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Menu Name", "Quantity", "Sub Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spSplit.setViewportView(tabSplit);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spSplit)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labOrderList)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbOrderList, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labQty)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spQty, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDone, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labOrderList)
                    .addComponent(labQty)
                    .addComponent(spQty, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOrderList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDone)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spSplit, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private String tabNo = "";
    private Cashier cashLink;
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // add row to table
        try {
            // get menu id
            int mid = Integer.parseInt(((Combo) cbOrderList.getSelectedItem()).getValue());
            // get menu name
            String name = ((Combo) cbOrderList.getSelectedItem()).getLabel();
            // get quantity
            int qty = (int) spQty.getValue();
            if(qty == 0) return;
            // get price
            int price = Integer.parseInt(MyDb.GetField("SELECT `Price` FROM `Menu` WHERE `Id`=" + mid));
            // add row to table according to values above
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tabSplit.getModel();
            model.addRow(new Object[]{mid, name, qty, price * qty});
            spQty.setValue(0);
        } catch (Exception e) {}
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // delete row from table
        try {
            javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) tabSplit.getModel();
            model.removeRow(tabSplit.getSelectedRow());
        } catch (Exception e) {}
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        // close this form, go back to cashier and update item.
        if(tabSplit.getRowCount()==0) return;
        MsgBox.info("Split bill details updated.\nPlease proceed to payment in the other window (Cashier).");
        cashLink.doneAndCheck((javax.swing.table.DefaultTableModel) tabSplit.getModel());
        this.dispose();
    }//GEN-LAST:event_btnDoneActionPerformed

    private void cbOrderListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOrderListItemStateChanged
        // menu list item changed event
        if(cbOrderList.getSelectedIndex() == 0) return;
        Combo temp = (Combo) cbOrderList.getSelectedItem();
        // get menu id from selected menu
        int mid = Integer.parseInt(temp.getValue());
        // get quantity from order list on menu id and table no and status = done
        int maxqty = Integer.parseInt(MyDb.GetField("SELECT `Quantity` FROM `Order_List` WHERE `Menu_Id`=" + mid + " AND `Table_No`='" + tabNo + "' AND `Status`='DONE'"));
        // set maximum value according to selected menu's quantity
        spQty.setModel(new javax.swing.SpinnerNumberModel(0, 0, maxqty, 1));
    }//GEN-LAST:event_cbOrderListItemStateChanged

    private void refreshList() {
        // refresh combobox item list
        cbOrderList.removeAllItems();
        java.util.Vector modelSplit = MyDb.FillCombo("SELECT m.id, m.name " +
        "FROM `Order_List` o JOIN `Menu` m " + 
        "ON o.menu_id=m.id " +
        "WHERE o.status='DONE' AND `Table_No`='" + tabNo + "'" +
        " ORDER BY m.name ASC");
        cbOrderList.setModel(new javax.swing.DefaultComboBoxModel(modelSplit));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SplitBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SplitBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SplitBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SplitBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SplitBill("1", new Cashier()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDone;
    private javax.swing.JComboBox cbOrderList;
    private javax.swing.JLabel labOrderList;
    private javax.swing.JLabel labQty;
    private javax.swing.JSpinner spQty;
    private javax.swing.JScrollPane spSplit;
    private javax.swing.JTable tabSplit;
    // End of variables declaration//GEN-END:variables
}
